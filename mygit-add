#!/usr/bin/python3
# mygit-add
# Written by z5611273 on 6/8/2025

import sys
import re
import os
import filecmp

if not os.path.exists('.mygit'):
  print('mygit-add: error: mygit repository directory .mygit not found', file=sys.stderr)
  exit(1)

if (len(sys.argv) == 1):
  print('usage: mygit-add <filenames>')
  exit(1)

for filename in sys.argv[1:]:
  result = re.search(r'^\w[-\w\.]*$', filename)
  if (result == None):
    print(f"mygit-add: error: invalid filename '{filename}'", file=sys.stderr)
    exit(1)

if os.path.exists('.mygit/commits'):
  latestCommit = max(os.listdir(f'.mygit/commits'), key=int)

for filename in sys.argv[1:]:
  if (not os.path.exists(filename) and
      (not os.path.exists('.mygit/commits') or 
       not os.path.exists(f'.mygit/commits/{latestCommit}/{filename}'))):
    print(f"mygit-add: error: can not open '{filename}'", file=sys.stderr)
    exit(1)

try:
  os.mkdir('.mygit/index-storage')
except FileExistsError:
  pass

for filename in sys.argv[1:]:
  if os.path.exists(filename):
    if (os.path.exists(f'.mygit/index-storage/{filename}')
        and (filecmp.cmp(f'{filename}', f'.mygit/index-storage/{filename}', shallow=False))):
      continue
    elif os.path.exists(f'.mygit/commits'):
      latestCommit = max(os.listdir(f'.mygit/commits'), key=int)
      if (os.path.exists(f'.mygit/commits/{latestCommit}/{filename}')
          and filecmp.cmp(f'{filename}', f'.mygit/commits/{latestCommit}/{filename}', shallow=False)):
        continue
      
  if os.path.exists(filename):
    with open('.mygit/tracked', 'r') as file:
      trackedFiles = file.read().splitlines()
    if filename not in trackedFiles:
      with open('.mygit/tracked', 'a') as file:
        file.write(f'{filename}\n')

    with open(filename, "rb") as source:
      with open(f".mygit/index-storage/{filename}", "wb") as target:
        target.write(source.read())
  
  if os.path.exists('.mygit/modified'):
    with open('.mygit/modified', 'r') as file:
      content = file.read()
    if not re.search(rf'\b{filename}\b', content):
      with open('.mygit/modified', 'a') as file:
        file.write(f'{filename}\n')
  else:
    with open('.mygit/modified', 'w') as file:
      file.write(f'{filename}\n')

exit(0)
    
  